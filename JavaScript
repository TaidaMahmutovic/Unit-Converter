const readline = require("readline").createInterface({
    input: process.stdin,
    output: process.stdout
});

const units = {
    length: { meter: 1, kilometer: 0.001, mile: 0.000621371, foot: 3.28084, inch: 39.3701 },
    weight: { gram: 1, kilogram: 0.001, pound: 0.00220462, ounce: 0.035274 },
    temp: { celsius: "Celsius", fahrenheit: "Fahrenheit", kelvin: "Kelvin" }
};

function convertLength(v, from, to) {
    return v * (units.length[to] / units.length[from]);
}

function convertWeight(v, from, to) {
    return v * (units.weight[to] / units.weight[from]);
}

function convertTemp(v, from, to) {
    if (from === "celsius" && to === "fahrenheit") return (v * 9 / 5) + 32;
    if (from === "fahrenheit" && to === "celsius") return (v - 32) * 5 / 9;
    if (from === "celsius" && to === "kelvin") return v + 273.15;
    if (from === "kelvin" && to === "celsius") return v - 273.15;
    if (from === "fahrenheit" && to === "kelvin") return (v - 32) * 5 / 9 + 273.15;
    if (from === "kelvin" && to === "fahrenheit") return (v - 273.15) * 9 / 5 + 32;
    return null; 
}

function ask(q) {
    return new Promise(resolve => readline.question(q, resolve));
}

async function selectUnit(type, prompt) {
    const unitKeys = Object.keys(units[type]);
    console.log(`${prompt}`);
    unitKeys.forEach((unit, index) => {
        console.log(`${index + 1}. ${unit}`);
    });

    while (true) {
        const choice = parseInt(await ask("Choose a number: "), 10);
        if (choice >= 1 && choice <= unitKeys.length) {
            return unitKeys[choice - 1];
        }
        console.log("Invalid choice, please try again.");
    }
}

async function start() {
    try {
        console.log("Select conversion type:");
        console.log("1. Length");
        console.log("2. Weight");
        console.log("3. Temperature");
        const typeChoice = parseInt(await ask("Choose a number: "), 10);
        const types = ["length", "weight", "temp"];
        const type = types[typeChoice - 1];

        if (!type) {
            console.log("Invalid type selection! Exiting.");
            readline.close();
            return;
        }

        const value = parseFloat(await ask("Enter value: "));
        if (isNaN(value)) {
            console.log("Please provide a valid number! Exiting.");
            readline.close();
            return;
        }

        const fromUnit = await selectUnit(type, "Select the 'From' unit:");
        const toUnit = await selectUnit(type, "Select the 'To' unit:");
        let result;

        if (type === "length") {
            result = convertLength(value, fromUnit, toUnit);
        } else if (type === "weight") {
            result = convertWeight(value, fromUnit, toUnit);
        } else if (type === "temp") {
            result = convertTemp(value, fromUnit, toUnit);
            if (result === null) {
                console.log("Invalid temperature conversion!");
                readline.close();
                return;
            }
        }

        console.log(`${value} ${fromUnit} = ${result} ${toUnit}`);
    } catch (err) {
        console.log("Error: ", err);
    } finally {
        readline.close();
    }
}

start();
